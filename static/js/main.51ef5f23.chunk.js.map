{"version":3,"sources":["components/ProductList.js","api/requests.js","api/helper-functions.js","api/index.js","App.js","reportWebVitals.js","index.js"],"names":["ProductList","productType","productCategoryData","isLoading","setIsLoading","useState","tableRows","setTableRows","useEffect","rows","map","product","style","textAlign","name","color","join","manufacturer","price","DATAPAYLOAD","id","createList","LoadingInfo","className","Spinner","animation","width","height","marginTop","ProductTable","Table","responsive","size","Row","margin","length","baseURL","productRequest","axios","create","concat","headers","Accept","timeout","availabilityRequest","combineObjectsReducer","combined","current","has","set","Object","assign","get","combineListofObjectsReducer","currentList","reduce","categorize","result","categorized","type","push","validateArray","data","errorMessage","Array","isArray","Error","getProducts","categories","a","Promise","all","response","r","flat","getAvailability","products","availReqs","requests","Map","values","availability","transformResults","regex","array1","array2","cleanedAvailData","filter","toLowerCase","match","exec","replace","fetchProductData","then","ProductTypes","App","isFetchingList","setIsFetchingList","isCreatingList","setIsCreatingList","allProductData","setAllProductData","showError","setShowError","errorInfo","setErrorInfo","selectedCategory","setSelectedCategory","successRef","useRef","handleFetchResults","handleFetchErrors","err","message","request","fetchProducts","catch","setInterval","handleProductChange","NavigationBar","Navbar","bg","variant","Brand","Toggle","aria-controls","Nav","Link","onClick","reload","ErrorInfo","Button","ComponentHandler","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51ef5f23.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from 'react-bootstrap/Table';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Row from 'react-bootstrap/Row';\n\nconst ProductList = ({\n  productType, productCategoryData, isLoading, setIsLoading,\n}) => {\n  const [tableRows, setTableRows] = useState([]);\n\n  const createList = () => {\n    const rows = productCategoryData.map((product) => (\n      <tr key={product.id}>\n        <td style={{ textAlign: 'left' }}>{product.name}</td>\n        <td>{product.color.join(', ')}</td>\n        <td>{product.manufacturer}</td>\n        <td>{product.price}</td>\n        <td>{product.DATAPAYLOAD}</td>\n      </tr>\n    ));\n    setTableRows(rows);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    createList();\n  }, [productCategoryData]);\n\n  const LoadingInfo = () => (\n    <div className=\"content_center_screen\">\n      <Spinner\n        animation=\"border\"\n        style={{ width: '10rem', height: '10rem' }}\n      />\n      <h4 style={{ marginTop: '1rem' }}>Creating List...</h4>\n    </div>\n  );\n\n  const ProductTable = () => (\n    <Table responsive size=\"sm\">\n      <thead>\n        <tr>\n          <th style={{ textAlign: 'left' }}>Product name</th>\n          <th>Available colors</th>\n          <th>Manufacturer</th>\n          <th>Price</th>\n          <th>Availability</th>\n        </tr>\n      </thead>\n      <tbody>{tableRows}</tbody>\n    </Table>\n  );\n\n  return (\n    <div style={{ width: '100%' }}>\n      <Row className=\"justify-content-center\" style={{ margin: '1rem' }}>\n        <h1>{productType}</h1>\n      </Row>\n      {(isLoading || !tableRows.length) ? (<LoadingInfo />) : (<ProductTable />)}\n    </div>\n  );\n};\n\nProductList.propTypes = {\n  productType: PropTypes.string.isRequired,\n  productCategoryData: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    color: PropTypes.arrayOf(PropTypes.string).isRequired,\n    manufacturer: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    DATAPAYLOAD: PropTypes.string.isRequired,\n  })).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  setIsLoading: PropTypes.func.isRequired,\n};\n\nexport default ProductList;\n","import axios from 'axios';\n\nconst baseURL = 'https://bad-api-assignment.reaktor.com/';\n\nexport const productRequest = axios.create({\n  baseURL: baseURL.concat('v2/').concat('products/'),\n  headers: {\n    Accept: 'application/json',\n    // 'x-force-error-mode': 'all',\n  },\n  timeout: 100000,\n});\n\nexport const availabilityRequest = axios.create({\n  baseURL: baseURL.concat('v2/').concat('availability/'),\n  headers: {\n    Accept: 'application/json',\n    // 'x-force-error-mode': 'all',\n  },\n  timeout: 100000,\n});\n","const prettifyAvailabilityText = (text) => text\n  .replace('INSTOCK', 'In Stock')\n  .replace('OUTOFSTOCK', 'Out of Stock')\n  .replace('LESSTHAN10', '< 10');\n\nexport const cleanAvailabilityData = (avail, regex) => avail\n  .filter((a) => typeof (a) === 'object')\n  .map((a) => {\n    const availability = a;\n    availability.id = a.id.toLowerCase();\n    const { 1: match } = regex.exec(a.DATAPAYLOAD);\n    availability.DATAPAYLOAD = prettifyAvailabilityText(match);\n    return availability;\n  });\n\nexport const combineObjectsReducer = (combined, current) => {\n  const { id } = current;\n  if (combined.has(id)) {\n    combined.set(id, Object.assign(combined.get(id), current));\n  } else {\n    combined.set(id, current);\n  }\n\n  return combined;\n};\n\nexport const combineListofObjectsReducer = (combined, currentList) => currentList\n  .reduce(combineObjectsReducer, combined);\n\nexport const combineObjectArrays = (array1, array2) => [\n  ...[array1, array2]\n    .reduce(combineListofObjectsReducer, new Map()).values(),\n];\n\nexport const categorize = (result, current) => {\n  const categorized = result;\n  categorized[current.type] = categorized[current.type] || [];\n  categorized[current.type].push(current);\n  return categorized;\n};\n\nexport const validateArray = (data, errorMessage) => {\n  if (Array.isArray(data) && data.length) {\n    return data;\n  }\n  throw Error(errorMessage);\n};\n","import { productRequest, availabilityRequest } from './requests';\nimport {\n  cleanAvailabilityData,\n  categorize,\n  validateArray,\n  combineObjectArrays,\n} from './helper-functions';\n\nconst getProducts = async (categories) => {\n  const response = await Promise.all(categories.map((type) => productRequest.get(type)));\n  return response.map((r) => validateArray(\n    r.data,\n    'The server returned an empty product data.',\n  )).flat();\n};\n\nconst getAvailability = async (products) => {\n  const availReqs = products.reduce((requests, current) => {\n    if (!requests.has(current.manufacturer)) {\n      requests.set(current.manufacturer, availabilityRequest.get(current.manufacturer));\n    }\n    return requests;\n  }, new Map()).values();\n\n  const response = await Promise.all(availReqs);\n  const availability = response.map((r) => validateArray(\n    r.data.response,\n    'The server returned an empty availability data.',\n  )).flat();\n  return { products, availability };\n};\n\nconst transformResults = ({ products, availability }) => {\n  const cleanedAvailData = cleanAvailabilityData(\n    availability,\n    /<INSTOCKVALUE>(.*?)<\\/INSTOCKVALUE>/,\n  );\n\n  return combineObjectArrays(products, cleanedAvailData)\n    .filter((product) => typeof (product.type) !== 'undefined') // remove unused availability data.\n    .reduce(categorize, {});\n};\n\nconst fetchProductData = async (categories) => getProducts(categories)\n  .then(getAvailability)\n  .then(transformResults);\n\nexport default fetchProductData;\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport ProductList from './components/ProductList';\nimport fetchProducts from './api';\n\nconst fetchTimeInterval = 300000;\nconst ProductTypes = {\n  JACKETS: 'Jackets',\n  SHIRTS: 'Shirts',\n  ACCESSORIES: 'Accessories',\n  GLOVES: 'Gloves',\n  FACEMASKS: 'Facemasks',\n  BEANIES: 'Beanies',\n  DEFAULT: 'Gloves',\n};\n\nconst App = () => {\n  const [isFetchingList, setIsFetchingList] = useState(true);\n  const [isCreatingList, setIsCreatingList] = useState(true);\n  const [allProductData, setAllProductData] = useState([]);\n  const [showError, setShowError] = useState(false);\n  const [errorInfo, setErrorInfo] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(ProductTypes.DEFAULT);\n  const successRef = useRef(false);\n\n  const handleFetchResults = (result) => {\n    // console.log(result);\n    setAllProductData(result);\n    setIsFetchingList(false);\n    setShowError(false);\n    successRef.current = true;\n  };\n\n  const handleFetchErrors = (err) => {\n    // console.log(err);\n    if (!successRef.current) {\n      setErrorInfo(err.message);\n      setShowError(true);\n      setIsFetchingList(false);\n    }\n  };\n\n  const request = () => fetchProducts(['gloves', 'facemasks', 'beanies'])\n    .then(handleFetchResults)\n    .catch(handleFetchErrors);\n\n  useEffect(() => {\n    request();\n    setInterval(() => {\n      request();\n    }, fetchTimeInterval);\n  }, []);\n\n  const handleProductChange = (type) => {\n    if (selectedCategory !== type) {\n      setIsCreatingList(true);\n      setSelectedCategory(type);\n    }\n  };\n\n  const NavigationBar = () => (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>Bad-Api</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Nav className=\"mr-auto\">\n        <Nav.Link onClick={() => handleProductChange(ProductTypes.GLOVES)}>\n          {ProductTypes.GLOVES}\n        </Nav.Link>\n        <Nav.Link onClick={() => handleProductChange(ProductTypes.FACEMASKS)}>\n          {ProductTypes.FACEMASKS}\n        </Nav.Link>\n        <Nav.Link onClick={() => handleProductChange(ProductTypes.BEANIES)}>\n          {ProductTypes.BEANIES}\n        </Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n\n  const LoadingInfo = () => (\n    <div className=\"content_center_screen\">\n      <Spinner\n        animation=\"border\"\n        style={{ width: '10rem', height: '10rem' }}\n      />\n      <h4 style={{ marginTop: '1rem' }}>Finding Products...</h4>\n    </div>\n  );\n\n  const reload = () => {\n    setShowError(false);\n    setIsFetchingList(true);\n    setIsCreatingList(true);\n    request();\n  };\n\n  const ErrorInfo = () => (\n    <div className=\"content_center_screen align-text-left\">\n      <h1>Oops! Something went wrong.</h1>\n      <p>{'Error: '.concat(errorInfo)}</p>\n      <p>\n        The API has a built-in intentional failure casewhich might be causing these.\n      </p>\n      <p>\n        If the message shows Network Error, disable CORS policy on browser since the server\n        does not have cross-origin header set yet.\n      </p>\n      <Button variant=\"primary\" onClick={reload}>Try Again</Button>\n    </div>\n  );\n\n  const ComponentHandler = () => {\n    if (showError) return <ErrorInfo />;\n    if (isFetchingList) return <LoadingInfo />;\n    return (\n      <ProductList\n        productType={selectedCategory}\n        productCategoryData={allProductData[selectedCategory.toLowerCase()]}\n        isLoading={isCreatingList}\n        setIsLoading={setIsCreatingList}\n      />\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      <Container>\n        <ComponentHandler />\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}