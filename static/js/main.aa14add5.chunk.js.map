{"version":3,"sources":["components/ProductList.js","api/requests.js","api/api-functions.js","api/index.js","App.js","reportWebVitals.js","index.js"],"names":["ProductList","productType","productCategoryData","isLoading","setIsLoading","useState","tableRows","setTableRows","useEffect","rows","map","product","style","textAlign","name","color","join","manufacturer","price","DATAPAYLOAD","id","createList","LoadingInfo","className","Spinner","animation","width","height","ProductTable","Table","responsive","size","Row","margin","productRequest","axios","create","baseURL","headers","Accept","availabilityRequest","combineObjects","combined","current","has","set","Object","assign","get","combineObjLists","currentList","reduce","categorize","result","categorized","type","push","getProducts","categories","a","Promise","all","response","r","data","flat","getAvailability","products","availReqs","requests","Map","values","availability","transformResults","regex","cleanedAvailData","toLowerCase","replace","filter","validateResult","entries","Error","fetchProducts","then","ProductTypes","App","isFetchingList","setIsFetchingList","isCreatingList","setIsCreatingList","allProductData","setAllProductData","showError","setShowError","selectedCategory","setSelectedCategory","handleFetchResults","handleFetchErrors","err","request","catch","setInterval","handleJacketClick","handleShirtClick","handleAccessoriesClick","NavigationBar","Navbar","bg","variant","Brand","Nav","Link","onClick","marginTop","ErrorInfo","ComponentHandler","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa14add5.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from 'react-bootstrap/Table';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Row from 'react-bootstrap/Row';\n\nconst ProductList = ({\n  productType, productCategoryData, isLoading, setIsLoading,\n}) => {\n  const [tableRows, setTableRows] = useState([]);\n\n  const createList = () => {\n    const rows = productCategoryData.map((product) => (\n      <tr key={product.id}>\n        <td style={{ textAlign: 'left' }}>{product.name}</td>\n        <td>{product.color.join(', ')}</td>\n        <td>{product.manufacturer}</td>\n        <td>{product.price}</td>\n        <td>{product.DATAPAYLOAD}</td>\n      </tr>\n    ));\n    setTableRows(rows);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    createList();\n  }, [productCategoryData]);\n\n  const LoadingInfo = () => (\n    <div className=\"content_center_screen\">\n      <Spinner\n        animation=\"border\"\n        style={{ width: '10rem', height: '10rem' }}\n      />\n    </div>\n  );\n\n  const ProductTable = () => (\n    <Table responsive size=\"sm\">\n      <thead>\n        <tr>\n          <th style={{ textAlign: 'left' }}>Product name</th>\n          <th>Available colors</th>\n          <th>Manufacturer</th>\n          <th>Price</th>\n          <th>Availability</th>\n        </tr>\n      </thead>\n      <tbody>{tableRows}</tbody>\n    </Table>\n  );\n\n  return (\n    <div style={{ width: '100%' }}>\n      <Row className=\"justify-content-center\" style={{ margin: '1rem' }}>\n        <h1>{productType}</h1>\n      </Row>\n      {isLoading ? (<LoadingInfo />) : (<ProductTable />)}\n    </div>\n  );\n};\n\nProductList.propTypes = {\n  productType: PropTypes.string.isRequired,\n  productCategoryData: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    color: PropTypes.arrayOf(PropTypes.string).isRequired,\n    manufacturer: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    DATAPAYLOAD: PropTypes.string.isRequired,\n  })).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  setIsLoading: PropTypes.func.isRequired,\n};\n\nexport default ProductList;\n","import axios from 'axios';\n\nexport const productRequest = axios.create({\n  baseURL: 'https://bad-api-assignment.reaktor.com/products/',\n  headers: { Accept: 'application/json'/* , 'x-force-error-mode': 'all' */ },\n});\n\nexport const availabilityRequest = axios.create({\n  baseURL: 'https://bad-api-assignment.reaktor.com/availability/',\n  headers: { Accept: 'application/json'/* , 'x-force-error-mode': 'all' */ },\n});\n","export const cleanAvailabilityData = (avail, regex) => avail.map((a) => {\n  const availability = a;\n  availability.id = a.id.toLowerCase();\n  availability.DATAPAYLOAD = a.DATAPAYLOAD.replace(regex, '');\n  return availability;\n});\n\nexport const combineObjects = (combined, current) => {\n  const { id } = current;\n  if (combined.has(id)) {\n    combined.set(id, Object.assign(combined.get(id), current));\n  } else {\n    combined.set(id, current);\n  }\n\n  return combined;\n};\n\nexport const combineObjLists = (combined, currentList) => currentList\n  .reduce(combineObjects, combined);\n\nexport const categorize = (result, current) => {\n  const categorized = result;\n  categorized[current.type] = categorized[current.type] || [];\n  categorized[current.type].push(current);\n  return categorized;\n};\n","import { productRequest, availabilityRequest } from './requests';\nimport { cleanAvailabilityData, combineObjLists, categorize } from './api-functions';\n\nconst getProducts = async (categories) => {\n  const response = await Promise.all(categories.map((type) => productRequest.get(type)));\n  return response.map((r) => r.data).flat();\n};\n\nconst getAvailability = async (products) => {\n  const availReqs = products.reduce((requests, current) => {\n    if (!requests.has(current.manufacturer)) {\n      requests.set(current.manufacturer, availabilityRequest.get(current.manufacturer));\n    }\n    return requests;\n  }, new Map()).values();\n\n  const response = await Promise.all(availReqs);\n  const availability = response.map((r) => r.data.response).flat();\n  return { products, availability };\n};\n\nconst transformResults = ({ products, availability }) => {\n  const cleanedAvailData = cleanAvailabilityData(availability, /<[^>]*>|\\\\n| /g);\n  return [...[products, cleanedAvailData]\n    .reduce(combineObjLists, new Map()).values()]\n    .filter((product) => typeof (product.type) !== 'undefined')\n    .reduce(categorize, {});\n};\n\nconst validateResult = (result) => {\n  if (Object.entries(result) === 0) {\n    throw new Error('empty result');\n  }\n  return result;\n};\n\nconst fetchProducts = async (categories) => getProducts(categories)\n  .then(getAvailability)\n  .then(\n    transformResults,\n    validateResult,\n  );\n\nexport default fetchProducts;\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React, { useState, useEffect } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ProductList from './components/ProductList';\nimport fetchProducts from './api';\n\nconst fetchTimeInterval = 300000;\nconst ProductTypes = {\n  JACKETS: 'Jackets',\n  SHIRTS: 'Shirts',\n  ACCESSORIES: 'Accessories',\n  DEFAULT: 'Jackets',\n};\n\nconst App = () => {\n  const [isFetchingList, setIsFetchingList] = useState(true);\n  const [isCreatingList, setIsCreatingList] = useState(true);\n  const [allProductData, setAllProductData] = useState([]);\n  const [showError, setShowError] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(ProductTypes.DEFAULT);\n\n  const handleFetchResults = (result) => {\n    // console.log(result);\n    setAllProductData(result);\n    setIsFetchingList(false);\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  const handleFetchErrors = (err) => {\n    // console.log(err);\n    setShowError(true);\n    setIsFetchingList(false);\n  };\n\n  const request = () => fetchProducts(['jackets', 'shirts', 'accessories'])\n    .then(handleFetchResults)\n    .catch(handleFetchErrors);\n\n  useEffect(() => {\n    request();\n    setInterval(() => {\n      request();\n    }, fetchTimeInterval);\n  }, []);\n\n  const handleJacketClick = () => {\n    if (selectedCategory !== ProductTypes.JACKETS) {\n      setIsCreatingList(true);\n      setSelectedCategory(ProductTypes.JACKETS);\n    }\n  };\n\n  const handleShirtClick = () => {\n    if (selectedCategory !== ProductTypes.SHIRTS) {\n      setIsCreatingList(true);\n      setSelectedCategory(ProductTypes.SHIRTS);\n    }\n  };\n\n  const handleAccessoriesClick = () => {\n    if (selectedCategory !== ProductTypes.ACCESSORIES) {\n      setIsCreatingList(true);\n      setSelectedCategory(ProductTypes.ACCESSORIES);\n    }\n  };\n\n  const NavigationBar = () => (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>Bad-Api</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link onClick={handleJacketClick}>{ProductTypes.JACKETS}</Nav.Link>\n        <Nav.Link onClick={handleShirtClick}>{ProductTypes.SHIRTS}</Nav.Link>\n        <Nav.Link onClick={handleAccessoriesClick}>{ProductTypes.ACCESSORIES}</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n\n  const LoadingInfo = () => (\n    <div className=\"content_center_screen\">\n      <Spinner\n        animation=\"border\"\n        style={{ width: '10rem', height: '10rem' }}\n      />\n      <h4 style={{ marginTop: '1rem' }}>Finding Products...</h4>\n    </div>\n  );\n\n  const ErrorInfo = () => {\n    const info = \"This page didn't load product data correctly, please try again.\";\n    return (\n      <div className=\"content_center_screen\">\n        <h1>Oops! Something went wrong.</h1>\n        <p>{info}</p>\n        <p>The API has a built-in intentional failure case which might be causing these.</p>\n      </div>\n    );\n  };\n\n  const ComponentHandler = () => {\n    if (showError) return <ErrorInfo />;\n    if (isFetchingList) return <LoadingInfo />;\n    return (\n      <ProductList\n        productType={selectedCategory}\n        productCategoryData={allProductData[selectedCategory.toLowerCase()]}\n        isLoading={isCreatingList}\n        setIsLoading={setIsCreatingList}\n      />\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      <Container>\n        <ComponentHandler />\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}